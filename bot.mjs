import TelegramBot from 'node-telegram-bot-api';
import http from 'http';

const token = '7499296381:AAEL8pi2TBPQS__EomvcvmtBwgpsgKRiYN8';
const bot = new TelegramBot(token, { polling: true });
const API_URL = 'https://carplates-ua.vercel.app/api/car';

function transliterateUkrainianPlate(text) {
  const translitMap = {
    '–ê': 'A', '–í': 'B', '–°': 'C', '–ï': 'E', '–ù': 'H', '–Ü': 'I', '–ö': 'K', '–ú': 'M',
    '–û': 'O', '–†': 'P', '–¢': 'T', '–£': 'Y', '–•': 'X', '–ó': 'Z',
    '–∞': 'A', '–≤': 'B', '—Å': 'C', '–µ': 'E', '–Ω': 'H', '—ñ': 'I', '–∫': 'K', '–º': 'M',
    '–æ': 'O', '—Ä': 'P', '—Ç': 'T', '—É': 'Y', '—Ö': 'X', '–∑': 'Z'
  };
  return text.split('').map(char => translitMap[char] || char).join('');
}

function formatCarInfo(data) {
  let message = `üöó <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ</b>\n\n`;
  if (data.brand && data.model) message += `üè∑Ô∏è <b>–ú–∞—Ä–∫–∞:</b> <code>${data.brand} ${data.model}</code>\n`;
  if (data.year) message += `üìÖ <b>–ì–æ–¥:</b> <code>${data.year}</code>\n`;
  if (data.plate) message += `üöò <b>–ù–æ–º–µ—Ä:</b> <code>${data.plate}</code>\n`;
  if (data.vin) message += `üî¢ <b>VIN:</b> <code>${data.vin}</code>\n`;
  if (data.color) message += `üé® <b>–¶–≤–µ—Ç:</b> <code>${data.color}</code>\n`;
  if (data.engine) message += `‚öôÔ∏è <b>–î–≤–∏–≥–∞—Ç–µ–ª—å:</b> <code>${data.engine}</code>\n`;
  if (data.fuel) message += `‚õΩ <b>–¢–æ–ø–ª–∏–≤–æ:</b> <code>${data.fuel}</code>\n`;
  if (data.type) message += `üöõ <b>–¢–∏–ø:</b> <code>${data.type}</code>\n`;
  if (data.mass) message += `‚öñÔ∏è <b>–ú–∞—Å—Å–∞:</b> <code>${data.mass}</code>\n`;
  if (data.max_mass) message += `üèãÔ∏è <b>–ü–æ–ª–Ω–∞—è –º–∞—Å—Å–∞:</b> <code>${data.max_mass}</code>\n`;
  if (data.category) message += `üì¶ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è/–ö—É–∑–æ–≤:</b> <code>${data.category}</code>\n`;
  if (data.region) message += `üåç <b>–†–µ–≥–∏–æ–Ω:</b> <code>${data.region}</code>\n`;
  if (data.settlement) message += `üèôÔ∏è <b>–ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç:</b> <code>${data.settlement}</code>\n`;
  return message;
}

function isValidInput(input) {
  const transliterated = transliterateUkrainianPlate(input);
  const vinPattern = /^[A-HJ-NPR-Z0-9]{17}$/i;
  const platePattern = /^[A-Z]{2}\d{4}[A-Z]{2}$|^[A-Z]{3}\d{4}$|^\d{4}[A-Z]{2}$|^\d{5}[A-Z]{2}$/i;
  return vinPattern.test(input) || platePattern.test(transliterated);
}

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const welcomeMessage = `
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CarPlates UA Bot!

üîç –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ VIN-–∫–æ–¥ –∏–ª–∏ –≥–æ—Å–Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ —è –Ω–∞–π–¥—É –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö.

üìù –ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ VIN: WDB9036621R859021
‚Ä¢ –ù–æ–º–µ—Ä: AA1234BB –∏–ª–∏ –ê–ê1234–í–í

üí° VIN-–∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 17 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–æ–º–µ—Ä –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –∏–ª–∏ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π.
  `;
  bot.sendMessage(chatId, welcomeMessage);
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  const helpMessage = `
‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

üîç <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ VIN-–∫–æ–¥ (17 —Å–∏–º–≤–æ–ª–æ–≤) –∏–ª–∏ –≥–æ—Å–Ω–æ–º–µ—Ä
2. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ

üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

‚ùì <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</b>
‚Ä¢ VIN-–∫–æ–¥: 17 —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
‚Ä¢ –ì–æ—Å–Ω–æ–º–µ—Ä: —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –∏–ª–∏ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ê–ê1234–í–í –∏–ª–∏ AA1234BB)

üîó <b>–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:</b>
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –±–∞–∑ –ú–í–° –£–∫—Ä–∞–∏–Ω—ã.
  `;
  bot.sendMessage(chatId, helpMessage, { parse_mode: 'HTML' });
});

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (!text) return;
  if (text && text.startsWith('/')) return;
  if (!isValidInput(text)) {
    bot.sendMessage(chatId, `
‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</b>

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:
‚Ä¢ VIN-–∫–æ–¥: 17 —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
‚Ä¢ –ì–æ—Å–Ω–æ–º–µ—Ä: —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –∏–ª–∏ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ê–ê1234–í–í –∏–ª–∏ AA1234BB)

üìù <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
‚Ä¢ WDB9036621R859021
‚Ä¢ –ê–ê1234–í–í –∏–ª–∏ AA1234BB

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.
    `, { parse_mode: 'HTML' });
    return;
  }

  const searchMessage = await bot.sendMessage(chatId, `
üîç <b>–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...</b>

–ó–∞–ø—Ä–æ—Å: <code>${text}</code>

‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.
  `, { parse_mode: 'HTML' });

  try {
    const requestText = transliterateUkrainianPlate(text.toUpperCase());

    const response = await fetch(API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': 'SID=g.a0002Ah0M1_eEngpcqhYUKr5IdeYHAc6FM4TJB71L5DIvPuwtm2znV4o81CqWsd2t88QJa1vDgACgYKARsSARESFQHGX2Mia7ghZS73qWho9mFOps23WBoVAUF8yKrA49JHTythre6aTh-GBRpm0076; SIDCC=AKEyXzUzw0TCBtjyOwlTiUPY2v3UOdScE8gfMV4nA1B_8inEQuwr2QdrAdLhxi1pUfq2PxwkiA; SSID=ALM7ZkKsdm0xPWi9b; _Secure-1PAPISID=bYoSfHGCqAkyJwVD9rpGMq-UGt355a-PDLKOYoPwl8yWOcBDA7NS3Yx6mlu43Ej4Ya6HueKGmL3xTb5czqZLxjFcS-8804NmwcPycLGv-49DZuL09YEM-Kd4jwSGnSUFnF8StP1aRY6Uf7ULTj8stXxgq3m2dlpWgcskAn5AxLHmrBDb5MnkRElyRculIJ6I_Y8-SrzrHSTz6YQqb2zop4Svnh4GzZFKWsFr_SeuPAWST0sw7iaXtv5NbKGDGPZCm5osGultyoYLMTHfdH_6WUcka9SUf54rsJpjPZoFQqLfuJGc6nrx99_FzC1ARSNUuIDU0oA9iqRJk_9rD4HfHsF8Nmjoj2-Cm8LAWUp2G7DXRw; _Secure-1PSSIDCC=AKEyXzXzPdrsdK2UtGHJL74cMrJ19tcnGsSquNb3z-bnkOAyqFzNIwSpEZdPOzgrR5HBN33yIHJ5g4qiZb32hStU7kZIJE8GkXqbSloHmN3Knk9zmQuvUg7ISBGuPiHSzxqjxZSoI3QUdu2hsYWAR_0s0VcTmVHsQkAKxDvVMr7BTgc_Lc1YATD9eoDi04KcU; _Secure-3PAPISID=bYoSfHGCqAkyJwVD9rpGMq-UGt355a-PDLKOYoPwl8yWOcBDA7NS3Yx6mlu43Ej4Ya6HueKGmL3xTb5czqZLxjFcS-8804NmwcPycLGv-49DZuL09YEM-Kd4jwSGnSUFnF8StP1aRY6Uf7ULTj8stXxgq3m2dlpWgcskAn5AxLHmrBDb5MnkRElyRculIJ6I_Y8-SrzrHSTz6YQqb2zop4Svnh4GzZFKWsFr_SeuPAWST0sw7iaXtv5NbKGDGPZCm5osGultyoYLMTHfdH_6WUcka9SUf54rsJpjPZoFQqLfuJGc6nrx99_FzC1ARSNUuIDU0oA9iqRJk_9rD4HfHsF8Nmjoj2-Cm8LAWUp2G7DXRw; _Secure-3PSIDCC=AKEyXzXzPdrsdK2UtGHJL74cMrJ19tcnGsSquNb3z-bnkOAyqFzNIwSpEZdPOzgrR5HBN33yIHJ5g4qiZb32hStU7kZIJE8GkXqbSloHmN3Knk9zmQuvUg7ISBGuPiHSzxqjxZSoI3QUdu2hsYWAR_0s0VcTmVHsQkAKxDvVMr7BTgc_Lc1YATD9eoDi04KcU; _Secure-3PSID=bYoSfHGCqAkyJwVD9rpGMq-UGt355a-PDLKOYoPwl8yWOcBDA7NS3Yx6mlu43Ej4Ya6HueKGmL3xTb5czqZLxjFcS-8804NmwcPycLGv-49DZuL09YEM-Kd4jwSGnSUFnF8StP1aRY6Uf7ULTj8stXxgq3m2dlpWgcskAn5AxLHmrBDb5MnkRElyRculIJ6I_Y8-SrzrHSTz6YQqb2zop4Svnh4GzZFKWsFr_SeuPAWST0sw7iaXtv5NbKGDGPZCm5osGultyoYLMTHfdH_6WUcka9SUf54rsJpjPZoFQqLfuJGc6nrx99_FzC1ARSNUuIDU0oA9iqRJk_9rD4HfHsF8Nmjoj2-Cm8LAWUp2G7DXRw; _Secure-ENID=28.SE~S4q201G..; AEC=AaJma5uLTk6w..; APISID=0s4Bw4CJWWF..; HSID=A25SnyHmm0Pt..; NID=525~Am6pX0n..; SAPISID=bYoSfHGCqAkyJwVD9rpGMq-UGt355a-PDLK; SEARCH_SAMESITE=CgQIk658; SID=g.a0002Ah0M1_eEngpcqhYUKr5IdeYHAc6FM4TJB71L5DIvPuwtm2znV4o81CqWsd2t88QJa1vDgACgYKARsSARESFQHGX2Mia7ghZS73qWho9mFOps23WBoVAUF8yKrA49JHTythre6aTh-GBRpm0076'
    },
    body: JSON.stringify({ vin: requestText })
  });

  const data = await response.json();

  bot.deleteMessage(chatId, searchMessage.message_id);

  if (!data.success) {
    bot.sendMessage(chatId, `
‚ùå <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>

–ó–∞–ø—Ä–æ—Å: <code>${text}</code>

${data.message || '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:'}
‚Ä¢ –ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –£–∫—Ä–∞–∏–Ω–µ
‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π VIN-–∫–æ–¥ –∏–ª–∏ –Ω–æ–º–µ—Ä
‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.
    `, { parse_mode: 'HTML' });
    return;
  }

  const formattedMessage = formatCarInfo(data);
  bot.sendMessage(chatId, formattedMessage, { parse_mode: 'HTML' });

} catch (error) {
  console.error('Bot error:', error);

  bot.deleteMessage(chatId, searchMessage.message_id);

  bot.sendMessage(chatId, `
‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>

–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
  `, { parse_mode: 'HTML' });
}
});

console.log('Bot started...');

// Minimal HTTP server to keep Fly.io machine active and pass health checks
const healthPort = process.env.PORT ? Number(process.env.PORT) : 8080;
const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.end('OK');
});
server.listen(healthPort, () => {
  console.log(`Health server listening on port ${healthPort}`);
});
